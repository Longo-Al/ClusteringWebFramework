
# Stage 1: Setup Tomcat and deploy the application
FROM tomcat:9.0

# Set working directories for each service
WORKDIR /usr/local/tomcat
RUN apt-get update && apt-get install -y \
    mysql-server \
    openssh-server \
    supervisor

### private String DRIVER_CLASS_NAME = "com.mysql.cj.jdbc.Driver";
##private  String DBMS = "jdbc:mysql";
#private  String SERVER = "localhost";
#private  String DATABASE = "MapDB";
##private  int PORT = 3306;
##private  String USER_ID = "MapUser";
##private  String PASSWORD = "map";

# Configure SSH
RUN mkdir /var/run/sshd \
    && echo 'root:password' | chpasswd \
    && sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config \
    && sed -i 's/UsePAM yes/UsePAM no/' /etc/ssh/sshd_config \
    && useradd --create-home --base-dir /home newuser \
    && echo "newuser:newuser" | chpasswd 


# Expose ports for MySQL, SSH, and Tomcat
EXPOSE 3306 22 8080

# Set working directory for MySQL and initialize
WORKDIR /var/lib/mysql
COPY init.sql /docker-entrypoint-initdb.d/

# Set working directory for Tomcat and deploy the application
WORKDIR /usr/local/tomcat
COPY ./build/libs/clusteringwebapp-*.war $CATALINA_HOME/webapps/clusteringwebapp.war

# Supervisor configuration
WORKDIR /etc/supervisor/conf.d
COPY ./docker-config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Entrypoint script to start all services
WORKDIR /usr/local/bin
COPY ./docker-config/docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
